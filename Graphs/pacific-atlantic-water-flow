#https://neetcode.io/problems/pacific-atlantic-water-flow

class Solution {
public:
    vector<vector<int>> heights;
    int m, n;
    void dfs(int i,int j, vector<vector<bool>> &ocean){
        ocean[i][j] = true;
        //top
        if(i-1>=0 && !ocean[i-1][j]&&heights[i][j]<=heights[i-1][j])
            dfs(i-1,j,ocean);
        //right
        if(j+1<n && !ocean[i][j+1]&&heights[i][j]<=heights[i][j+1])
            dfs(i,j+1,ocean);
        //bottom
        if(i+1<m && !ocean[i+1][j]&&heights[i][j]<=heights[i+1][j])
            dfs(i+1,j,ocean);
        //left
        if(j-1>=0 && !ocean[i][j-1]&&heights[i][j]<=heights[i][j-1])
            dfs(i,j-1,ocean);
    }
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {
        m = heights.size();
        n = heights[0].size();
        this->heights = heights;
        vector<vector<bool>> pacific(m, vector<bool>(n, false)), atlantic(m, vector<bool>(n,false));
        for(int i=0;i<m;i++){
            dfs(i, 0, pacific);
            dfs(i, n-1, atlantic);
        }
        for(int j=0;j<n;j++){
            dfs(0,j,pacific);
            dfs(m-1,j,atlantic);
        }

        vector<vector<int>> res;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(pacific[i][j] && atlantic[i][j]){
                    res.push_back({i,j});
                }
            }
        }
        return res;
    }
};
